name: Setup Build Cache

on:
  workflow_dispatch:
    inputs:
      force_refresh:
        description: 'Force refresh all caches'
        required: false
        default: 'false'
        type: choice
        options:
          - 'false'
          - 'true'

env:
  NODE_VERSION: '18'
  JAVA_VERSION: '17'
  ANDROID_HOME: /opt/android-sdk-linux
  ANDROID_SDK_ROOT: /opt/android-sdk-linux

jobs:
  setup-cache:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      # Node.js and NPM dependencies cache
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: 'https://registry.npmjs.org'

      - name: Get npm cache directory
        id: npm-cache-dir
        run: echo "dir=$(npm config get cache)" >> $GITHUB_OUTPUT

      - name: Cache npm dependencies
        uses: actions/cache@v4
        id: npm-cache
        with:
          path: |
            ${{ steps.npm-cache-dir.outputs.dir }}
            node_modules
          key: ${{ runner.os }}-npm-${{ env.NODE_VERSION }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-${{ env.NODE_VERSION }}-
            ${{ runner.os }}-npm-

      - name: Install npm dependencies
        if: steps.npm-cache.outputs.cache-hit != 'true' || github.event.inputs.force_refresh == 'true'
        run: |
          echo "Installing npm dependencies..."
          npm ci --legacy-peer-deps --no-audit --no-fund

      # Java JDK setup
      - name: Setup Java JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'

      # Android SDK setup and cache
      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
        with:
          api-level: 33
          target: default
          arch: x86_64

      - name: Cache Android SDK
        uses: actions/cache@v4
        id: android-sdk-cache
        with:
          path: |
            ${{ env.ANDROID_HOME }}
            ~/.android
          key: ${{ runner.os }}-android-sdk-33-${{ env.JAVA_VERSION }}
          restore-keys: |
            ${{ runner.os }}-android-sdk-33-
            ${{ runner.os }}-android-sdk-

      # Gradle wrapper cache
      - name: Cache Gradle wrapper
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-wrapper-

      # Gradle dependencies cache
      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        id: gradle-cache
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/daemon
            android/.gradle
          key: ${{ runner.os }}-gradle-${{ env.JAVA_VERSION }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-${{ env.JAVA_VERSION }}-
            ${{ runner.os }}-gradle-

      - name: Make gradlew executable
        run: chmod +x android/gradlew

      # Download Gradle dependencies
      - name: Download Gradle dependencies
        if: steps.gradle-cache.outputs.cache-hit != 'true' || github.event.inputs.force_refresh == 'true'
        run: |
          cd android
          echo "Downloading Gradle dependencies..."
          ./gradlew dependencies --no-daemon --stacktrace --parallel

      # Cache Metro bundler
      - name: Cache Metro bundler
        uses: actions/cache@v4
        with:
          path: |
            ${{ runner.temp }}/metro-cache
            ${{ runner.temp }}/haste-map-*
          key: ${{ runner.os }}-metro-${{ env.NODE_VERSION }}-${{ hashFiles('**/metro.config.js', '**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-metro-${{ env.NODE_VERSION }}-
            ${{ runner.os }}-metro-

      # Cache React Native
      - name: Cache React Native
        uses: actions/cache@v4
        with:
          path: |
            node_modules/@react-native-community
            node_modules/react-native
          key: ${{ runner.os }}-rn-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-rn-

      # Cache Sharp and native dependencies
      - name: Cache native dependencies
        uses: actions/cache@v4
        id: native-deps-cache
        with:
          path: |
            node_modules/sharp
            node_modules/@img
          key: ${{ runner.os }}-native-deps-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-native-deps-

      - name: Pre-install Sharp
        if: steps.native-deps-cache.outputs.cache-hit != 'true' || github.event.inputs.force_refresh == 'true'
        run: |
          echo "Pre-installing Sharp for icon processing..."
          npm install sharp --no-save

      # Android AVD cache (for testing)
      - name: Cache Android AVD
        uses: actions/cache@v4
        with:
          path: |
            ~/.android/avd
            ~/.android/adb*
          key: ${{ runner.os }}-android-avd-33
          restore-keys: |
            ${{ runner.os }}-android-avd-

      # Kotlin compiler cache
      - name: Cache Kotlin compiler
        uses: actions/cache@v4
        with:
          path: |
            ~/.konan
            ~/.kotlin
          key: ${{ runner.os }}-kotlin-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-kotlin-

      # Verify setup and create summary
      - name: Verify setup and create summary
        run: |
          echo "## Build Cache Setup Complete ðŸš€" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Cache Status:" >> $GITHUB_STEP_SUMMARY
          
          # Check npm cache
          if [ "${{ steps.npm-cache.outputs.cache-hit }}" == "true" ]; then
            echo "- âœ… NPM dependencies: CACHE HIT" >> $GITHUB_STEP_SUMMARY
          else
            echo "- ðŸ”„ NPM dependencies: CACHE MISS (newly cached)" >> $GITHUB_STEP_SUMMARY
          fi
          
          # Check gradle cache
          if [ "${{ steps.gradle-cache.outputs.cache-hit }}" == "true" ]; then
            echo "- âœ… Gradle dependencies: CACHE HIT" >> $GITHUB_STEP_SUMMARY
          else
            echo "- ðŸ”„ Gradle dependencies: CACHE MISS (newly cached)" >> $GITHUB_STEP_SUMMARY
          fi
          
          # Check Android SDK cache
          if [ "${{ steps.android-sdk-cache.outputs.cache-hit }}" == "true" ]; then
            echo "- âœ… Android SDK: CACHE HIT" >> $GITHUB_STEP_SUMMARY
          else
            echo "- ðŸ”„ Android SDK: CACHE MISS (newly cached)" >> $GITHUB_STEP_SUMMARY
          fi
          
          # Check native dependencies
          if [ "${{ steps.native-deps-cache.outputs.cache-hit }}" == "true" ]; then
            echo "- âœ… Native dependencies: CACHE HIT" >> $GITHUB_STEP_SUMMARY
          else
            echo "- ðŸ”„ Native dependencies: CACHE MISS (newly cached)" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Installed Components:" >> $GITHUB_STEP_SUMMARY
          echo "- âœ… Node.js ${{ env.NODE_VERSION }}" >> $GITHUB_STEP_SUMMARY
          echo "- âœ… Java JDK ${{ env.JAVA_VERSION }}" >> $GITHUB_STEP_SUMMARY
          echo "- âœ… Android SDK API 33" >> $GITHUB_STEP_SUMMARY
          echo "- âœ… Gradle wrapper and dependencies" >> $GITHUB_STEP_SUMMARY
          echo "- âœ… Metro bundler cache prepared" >> $GITHUB_STEP_SUMMARY
          echo "- âœ… Sharp image processing library" >> $GITHUB_STEP_SUMMARY
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Verification:" >> $GITHUB_STEP_SUMMARY
          
          # Verify paths exist
          if [ -d "node_modules" ]; then
            NODE_SIZE=$(du -sh node_modules 2>/dev/null | cut -f1 || echo "N/A")
            echo "- Node modules: $NODE_SIZE" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [ -d "$HOME/.gradle" ]; then
            GRADLE_SIZE=$(du -sh ~/.gradle 2>/dev/null | cut -f1 || echo "N/A")
            echo "- Gradle cache: $GRADLE_SIZE" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [ -d "$ANDROID_HOME" ]; then
            echo "- Android SDK: âœ… Available at $ANDROID_HOME" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Environment:" >> $GITHUB_STEP_SUMMARY
          echo "- ANDROID_HOME: $ANDROID_HOME" >> $GITHUB_STEP_SUMMARY
          echo "- JAVA_HOME: ${JAVA_HOME}" >> $GITHUB_STEP_SUMMARY
          echo "- Node version: $(node --version)" >> $GITHUB_STEP_SUMMARY
          echo "- Java version: $(java -version 2>&1 | head -1)" >> $GITHUB_STEP_SUMMARY
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**ðŸš€ Cache is ready! Next builds should be significantly faster.**" >> $GITHUB_STEP_SUMMARY

      # Store cache metadata
      - name: Store cache metadata
        run: |
          mkdir -p .github-cache
          cat > .github-cache/cache-info.json << EOF
          {
            "timestamp": "$(date -u +%Y-%m-%dT%H:%M:%SZ)",
            "workflow_run": "${{ github.run_id }}",
            "node_version": "${{ env.NODE_VERSION }}",
            "java_version": "${{ env.JAVA_VERSION }}",
            "force_refresh": "${{ github.event.inputs.force_refresh }}",
            "cache_results": {
              "npm_hit": "${{ steps.npm-cache.outputs.cache-hit }}",
              "gradle_hit": "${{ steps.gradle-cache.outputs.cache-hit }}",
              "android_sdk_hit": "${{ steps.android-sdk-cache.outputs.cache-hit }}",
              "native_deps_hit": "${{ steps.native-deps-cache.outputs.cache-hit }}"
            },
            "cache_keys": {
              "npm": "${{ runner.os }}-npm-${{ env.NODE_VERSION }}-${{ hashFiles('**/package-lock.json') }}",
              "gradle": "${{ runner.os }}-gradle-${{ env.JAVA_VERSION }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}",
              "android_sdk": "${{ runner.os }}-android-sdk-33-${{ env.JAVA_VERSION }}"
            }
          }
          EOF
          
          echo "âœ… Cache setup completed successfully"
          echo "ðŸ“Š Cache metadata saved to .github-cache/cache-info.json"
