name: Setup Build Cache

on:
  workflow_dispatch:
    inputs:
      force_refresh:
        description: 'Force refresh all caches'
        required: false
        default: 'false'
        type: choice
        options:
          - 'false'
          - 'true'

env:
  NODE_VERSION: '18'
  JAVA_VERSION: '17'

jobs:
  setup-cache:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      # Node.js and NPM dependencies cache
      - name: Setup Node.js with cache
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Cache node_modules
        uses: actions/cache@v3
        id: npm-cache
        with:
          path: |
            node_modules
            ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Install dependencies
        if: steps.npm-cache.outputs.cache-hit != 'true' || github.event.inputs.force_refresh == 'true'
        run: |
          echo "Installing npm dependencies..."
          npm ci --legacy-peer-deps --no-audit --no-fund

      # Java JDK cache
      - name: Setup Java with cache
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'

      # Android SDK cache
      - name: Cache Android SDK
        uses: actions/cache@v3
        id: android-sdk-cache
        with:
          path: |
            ${{ env.ANDROID_HOME }}
            ${{ env.ANDROID_SDK_ROOT }}
            ~/.android
          key: ${{ runner.os }}-android-sdk-${{ hashFiles('android/build.gradle', 'android/app/build.gradle') }}
          restore-keys: |
            ${{ runner.os }}-android-sdk-

      - name: Setup Android SDK
        if: steps.android-sdk-cache.outputs.cache-hit != 'true' || github.event.inputs.force_refresh == 'true'
        uses: android-actions/setup-android@v3

      # Gradle wrapper and dependencies cache
      - name: Cache Gradle wrapper
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/wrapper
            android/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('android/gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-wrapper-

      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/daemon
            android/.gradle
          key: ${{ runner.os }}-gradle-deps-${{ hashFiles('android/build.gradle', 'android/app/build.gradle', 'android/gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-deps-
            ${{ runner.os }}-gradle-

      - name: Make gradlew executable
        run: chmod +x android/gradlew

      # Pre-download Gradle dependencies
      - name: Download Gradle dependencies
        run: |
          cd android
          echo "Downloading Gradle dependencies..."
          ./gradlew dependencies --no-daemon --stacktrace

      # Android build tools and SDK components cache
      - name: Cache Android build tools
        uses: actions/cache@v3
        with:
          path: |
            ${{ env.ANDROID_HOME }}/build-tools
            ${{ env.ANDROID_HOME }}/platforms
            ${{ env.ANDROID_HOME }}/tools
            ${{ env.ANDROID_HOME }}/platform-tools
          key: ${{ runner.os }}-android-build-tools-v2
          restore-keys: |
            ${{ runner.os }}-android-build-tools-

      # Pre-compile and cache build artifacts
      - name: Pre-compile project (Debug)
        run: |
          cd android
          echo "Pre-compiling debug build..."
          ./gradlew compileDebugJavaWithJavac compileDebugKotlin --no-daemon --stacktrace

      - name: Pre-compile project (Release)
        run: |
          cd android
          echo "Pre-compiling release build..."
          ./gradlew compileReleaseJavaWithJavac compileReleaseKotlin --no-daemon --stacktrace

      # Cache React Native Metro bundler
      - name: Cache Metro bundler
        uses: actions/cache@v3
        with:
          path: |
            node_modules/.cache/metro
            ${{ runner.temp }}/metro-cache
          key: ${{ runner.os }}-metro-${{ hashFiles('metro.config.js', 'package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-metro-

      # Cache Sharp (for icon processing)
      - name: Cache Sharp
        uses: actions/cache@v3
        with:
          path: |
            node_modules/sharp
          key: ${{ runner.os }}-sharp-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-sharp-

      - name: Pre-install Sharp
        run: |
          echo "Pre-installing Sharp for icon processing..."
          npm install sharp --no-save

      # Warm up Android emulator cache (optional, for testing)
      - name: Cache Android AVD
        uses: actions/cache@v3
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: ${{ runner.os }}-android-avd
          restore-keys: |
            ${{ runner.os }}-android-avd

      # Create a summary of cached items
      - name: Cache Summary
        run: |
          echo "## Build Cache Setup Complete ðŸš€" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Cached Components:" >> $GITHUB_STEP_SUMMARY
          echo "- âœ… Node.js ${{ env.NODE_VERSION }} dependencies" >> $GITHUB_STEP_SUMMARY
          echo "- âœ… Java JDK ${{ env.JAVA_VERSION }}" >> $GITHUB_STEP_SUMMARY
          echo "- âœ… Android SDK and build tools" >> $GITHUB_STEP_SUMMARY
          echo "- âœ… Gradle wrapper and dependencies" >> $GITHUB_STEP_SUMMARY
          echo "- âœ… Pre-compiled Kotlin/Java classes" >> $GITHUB_STEP_SUMMARY
          echo "- âœ… Metro bundler cache" >> $GITHUB_STEP_SUMMARY
          echo "- âœ… Sharp image processing library" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Cache Sizes:" >> $GITHUB_STEP_SUMMARY
          
          # Show cache directory sizes
          if [ -d "node_modules" ]; then
            NODE_SIZE=$(du -sh node_modules | cut -f1)
            echo "- Node modules: $NODE_SIZE" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [ -d "~/.gradle" ]; then
            GRADLE_SIZE=$(du -sh ~/.gradle 2>/dev/null | cut -f1 || echo "N/A")
            echo "- Gradle cache: $GRADLE_SIZE" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [ -d "android/.gradle" ]; then
            PROJECT_GRADLE_SIZE=$(du -sh android/.gradle | cut -f1)
            echo "- Project Gradle: $PROJECT_GRADLE_SIZE" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Next builds should complete in ~1-2 minutes instead of 7-9 minutes!** âš¡" >> $GITHUB_STEP_SUMMARY

      # Store cache metadata for monitoring
      - name: Store cache metadata
        run: |
          cat > cache-info.json << EOF
          {
            "timestamp": "$(date -u +%Y-%m-%dT%H:%M:%SZ)",
            "node_version": "${{ env.NODE_VERSION }}",
            "java_version": "${{ env.JAVA_VERSION }}",
            "gradle_version": "$(cd android && ./gradlew --version | grep Gradle | cut -d ' ' -f2)",
            "android_sdk_version": "$(ls $ANDROID_HOME/platforms | tail -1)",
            "cache_keys": {
              "npm": "${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}",
              "gradle": "${{ runner.os }}-gradle-deps-${{ hashFiles('android/build.gradle', 'android/app/build.gradle', 'android/gradle/wrapper/gradle-wrapper.properties') }}",
              "android_sdk": "${{ runner.os }}-android-sdk-${{ hashFiles('android/build.gradle', 'android/app/build.gradle') }}"
            }
          }
          EOF
          
          echo "Cache setup completed at $(date)"
          echo "Cache metadata stored in cache-info.json"
